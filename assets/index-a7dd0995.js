var N=Object.defineProperty;var _=(a,e,t)=>e in a?N(a,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):a[e]=t;var l=(a,e,t)=>(_(a,typeof e!="symbol"?e+"":e,t),t);import{c as z,_ as D}from"./supabase-2481e69c.js";import{p as M}from"./phaser-f8c8a439.js";(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))o(r);new MutationObserver(r=>{for(const i of r)if(i.type==="childList")for(const s of i.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&o(s)}).observe(document,{childList:!0,subtree:!0});function t(r){const i={};return r.integrity&&(i.integrity=r.integrity),r.referrerPolicy&&(i.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?i.credentials="include":r.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function o(r){if(r.ep)return;r.ep=!0;const i=t(r);fetch(r.href,i)}})();class U extends M.Scene{constructor(){super({key:"BootScene"})}preload(){console.log("🔧 BootScene: Starting asset loading..."),this.createLoadingUI(),this.load.image("bottle","data:image/svg+xml;base64,"+btoa(`
      <svg width="20" height="40" xmlns="http://www.w3.org/2000/svg">
        <rect width="20" height="40" fill="#8B4513" stroke="#654321" stroke-width="2"/>
        <rect x="5" y="5" width="10" height="30" fill="#A0522D"/>
      </svg>
    `)),this.load.image("bottle_green","data:image/svg+xml;base64,"+btoa(`
      <svg width="20" height="40" xmlns="http://www.w3.org/2000/svg">
        <rect width="20" height="40" fill="#228B22" stroke="#006400" stroke-width="2"/>
        <rect x="5" y="5" width="10" height="30" fill="#32CD32"/>
        <text x="10" y="25" text-anchor="middle" fill="white" font-size="10">X</text>
      </svg>
    `)),this.load.image("powerup_star","data:image/svg+xml;base64,"+btoa(`
      <svg width="30" height="30" xmlns="http://www.w3.org/2000/svg">
        <polygon points="15,2 18,10 27,10 20,16 23,25 15,20 7,25 10,16 3,10 12,10"
                 fill="#FFD700" stroke="#FFA500" stroke-width="2"/>
        <circle cx="15" cy="15" r="3" fill="#FFFF00"/>
      </svg>
    `)),this.load.image("charlie","/characters/charlie.png"),this.load.image("scrocca","/characters/scrocca.png"),this.load.image("leprecauno","/characters/leprecauno.png"),this.load.on("loaderror",e=>{console.error("❌ Asset loading error:",e.key,e.src),(e.key.startsWith("charlie")||e.key.startsWith("scrocca")||e.key.startsWith("leprecauno"))&&(console.warn("⚠️ Character asset failed, creating fallback sprite"),this.createFallbackCharacterSprite(e.key))}),this.load.image("bucket","data:image/svg+xml;base64,"+btoa(`
      <svg width="80" height="60" xmlns="http://www.w3.org/2000/svg">
        <path d="M10,20 L70,20 L65,55 L15,55 Z" fill="#888888" stroke="#666666" stroke-width="2"/>
        <rect x="10" y="15" width="60" height="10" fill="#AAAAAA"/>
      </svg>
    `)),this.load.image("background","data:image/svg+xml;base64,"+btoa(`
      <svg width="800" height="600" xmlns="http://www.w3.org/2000/svg">
        <defs>
          <linearGradient id="skyGradient" x1="0%" y1="0%" x2="0%" y2="100%">
            <stop offset="0%" style="stop-color:#87CEEB;stop-opacity:1" />
            <stop offset="100%" style="stop-color:#E0F6FF;stop-opacity:1" />
          </linearGradient>
        </defs>
        <rect width="800" height="600" fill="url(#skyGradient)"/>
      </svg>
    `))}create(){console.log("✅ BootScene: Assets loaded, transitioning to GameScene"),this.cameras.main.fadeOut(300,0,0,0),this.cameras.main.once("camerafadeoutcomplete",()=>{this.scene.start("GameScene")})}createLoadingUI(){const{width:e,height:t}=this.cameras.main,o=this.add.text(e/2,t/2-50,"Loading...",{fontSize:"32px",color:"#ffffff",fontFamily:"Arial"}).setOrigin(.5),r=this.add.graphics();r.fillStyle(0,.3),r.fillRect(e/2-150,t/2,300,20);const i=this.add.graphics();this.load.on("progress",s=>{i.clear(),i.fillStyle(65280),i.fillRect(e/2-150,t/2,300*s,20)}),this.load.on("complete",()=>{o.setText("Ready!"),i.clear(),r.clear()})}createFallbackCharacterSprite(e){const t={charlie:`<svg width="64" height="64" xmlns="http://www.w3.org/2000/svg">
        <circle cx="32" cy="32" r="25" fill="#FF6B6B" stroke="#000" stroke-width="2"/>
        <circle cx="25" cy="25" r="3" fill="#000"/>
        <circle cx="39" cy="25" r="3" fill="#000"/>
        <path d="M25,40 Q32,45 39,40" stroke="#000" stroke-width="2" fill="none"/>
        <text x="32" y="55" text-anchor="middle" font-size="8" fill="#000">Charlie</text>
      </svg>`,scrocca:`<svg width="64" height="64" xmlns="http://www.w3.org/2000/svg">
        <circle cx="32" cy="32" r="25" fill="#4ECDC4" stroke="#000" stroke-width="2"/>
        <circle cx="25" cy="25" r="3" fill="#000"/>
        <circle cx="39" cy="25" r="3" fill="#000"/>
        <path d="M25,40 Q32,45 39,40" stroke="#000" stroke-width="2" fill="none"/>
        <text x="32" y="55" text-anchor="middle" font-size="8" fill="#000">Scrocca</text>
      </svg>`,leprecauno:`<svg width="64" height="64" xmlns="http://www.w3.org/2000/svg">
        <circle cx="32" cy="32" r="25" fill="#32CD32" stroke="#000" stroke-width="2"/>
        <circle cx="25" cy="25" r="3" fill="#000"/>
        <circle cx="39" cy="25" r="3" fill="#000"/>
        <path d="M25,40 Q32,45 39,40" stroke="#000" stroke-width="2" fill="none"/>
        <text x="32" y="55" text-anchor="middle" font-size="6" fill="#000">Leprecauno</text>
      </svg>`};if(t[e]){const o="data:image/svg+xml;base64,"+btoa(t[e]);this.load.image(e,o)}}}const S={en:{title:"Etimuè Bottle Dropper",subtitle:"Catch the falling bottles!",version:"v2.0.0 - Clean Architecture",newGame:"New Game",pause:"Pause",resume:"Resume",instructions:"Instructions",footerMadeBy:"Made with ❤️ by Etimuè",footerControls:"Use arrow keys or mouse to control the bucket",gameStartTitle:"🎮 Etimuè Bottle Dropper",gameStartSubtitle:"Ready to catch some bottles?",gameStartButton:"▶️ New Game",leaderboard:"Leaderboard",leaderboardTitle:"🏆 Leaderboard",leaderboardWeekly:"📅 Weekly",leaderboardMonthly:"📆 Monthly",leaderboardLoading:"Loading leaderboard...",leaderboardEmpty:"No scores recorded yet!",leaderboardEncourage:"Be the first to play and set the record!",leaderboardInfo:"💡 Sign in to compete for weekly and monthly prizes!",instructionsTitle:"🎮 How to Play:",instructionsObjective:"🎯 Objective: Catch falling bottles with your bucket!",instructionsControls:"🕹️ Controls:",instructionsRules:"🍶 Game Rules:",instructionsTips:"🏆 Tips:",instructionsGoodLuck:"Good luck! 🎮",instructionsArrowKeys:"• Use ← → arrow keys to move",instructionsMouseDrag:"• Or click and drag with mouse/touch",instructionsMobileTouch:"• On mobile: Use touch controls at bottom",instructionsBrownBottles:"• Brown bottles: +1 point each",instructionsGreenBottles:"• Green bottles: Lose 1 life (unless All Good mode)",instructionsStarPowerups:"• ⭐ Star power-ups: Activate All Good mode",instructionsLives:"• 💗 You have 3 lives",instructionsTimer:"• ⏰ 60 seconds to play",instructionsCatchStars:"• Catch star power-ups to avoid green bottle damage",instructionsAllGoodMode:"• All Good mode makes green bottles worth +1 point",instructionsHighScore:"• Try to get the highest score possible!",score:"Score",lives:"Lives",time:"Time",allGood:"ALL GOOD",gameInstructions:"Use arrow keys or drag to move the bucket!",gameRules:"🍶 Catch brown bottles: +1pt | 🟢 Avoid green bottles: -1 life | ⭐ Star: All Good!",gameOver:"GAME OVER!",finalScore:"Final Score",restartMessage:'Click "New Game" to restart',authWelcome:"🎮 Welcome to Etimuè Bottle Dropper!",authSignInToPlay:"Sign in to play and compete for prizes",authContinueGoogle:"Continue with Google",authContinueEmail:"Continue with Email",authEmailTitle:"📧 Sign in with Email",authEmailSubtitle:"We'll send you a verification code",authSendCode:"Send Code",authBack:"← Back",authVerifyTitle:"🔐 Enter Verification Code",authVerifySubtitle:"Check your email for the 6-digit code",authVerify:"Verify",authProfileTitle:"👤 Setup Your Profile",authProfileSubtitle:"Choose a nickname for the leaderboard",authNicknamePlaceholder:"Your nickname",authMarketingConsent:"I want to receive updates and compete for prizes",authStartPlaying:"Start Playing!",authProcessing:"Processing...",authEmailPlaceholder:"your@email.com",authOtpPlaceholder:"000000",authInvalidEmail:"Please enter a valid email address",authCodeSent:"Verification code sent to your email!",authInvalidCode:"Invalid verification code",authCodeLength:"Please enter the 6-digit verification code",authFailed:"Authentication failed, please try again",authUnexpectedError:"Unexpected error during authentication",authGoogleFailed:"Google sign in failed",authSendFailed:"Failed to send verification code",authVerifyFailed:"Unexpected error during verification",authProfileFailed:"Failed to update profile",footerControlsCharacter:"Use arrow keys or mouse to control {character}",characterCharlie:"Charlie",characterScrocca:"Scrocca",characterLeprecauno:"Leprechaun"},it:{title:"Etimuè Bottle Dropper",subtitle:"Prendi le bottiglie che cadono!",version:"v2.0.0 - Architettura Pulita",newGame:"Nuova Partita",pause:"Pausa",resume:"Riprendi",instructions:"Istruzioni",footerMadeBy:"Fatto con ❤️ da Etimuè",footerControls:"Usa le frecce o il mouse per controllare il secchio",gameStartTitle:"🎮 Etimuè Bottle Dropper",gameStartSubtitle:"Pronto per catturare le bottiglie?",gameStartButton:"▶️ Nuova Partita",leaderboard:"Classifica",leaderboardTitle:"🏆 Classifica",leaderboardWeekly:"📅 Settimanale",leaderboardMonthly:"📆 Mensile",leaderboardLoading:"Caricamento classifica...",leaderboardEmpty:"Nessun punteggio ancora registrato!",leaderboardEncourage:"Sii il primo a giocare e stabilire il record!",leaderboardInfo:"💡 Accedi per competere per i premi settimanali e mensili!",instructionsTitle:"🎮 Come Giocare:",instructionsObjective:"🎯 Obiettivo: Prendi le bottiglie che cadono con il tuo secchio!",instructionsControls:"🕹️ Controlli:",instructionsRules:"🍶 Regole del Gioco:",instructionsTips:"🏆 Suggerimenti:",instructionsGoodLuck:"Buona fortuna! 🎮",instructionsArrowKeys:"• Usa le frecce ← → per muoverti",instructionsMouseDrag:"• Oppure clicca e trascina con mouse/touch",instructionsMobileTouch:"• Su mobile: Usa i controlli touch in basso",instructionsBrownBottles:"• Bottiglie marroni: +1 punto ciascuna",instructionsGreenBottles:"• Bottiglie verdi: Perdi 1 vita (tranne in modalità All Good)",instructionsStarPowerups:"• ⭐ Power-up stella: Attiva modalità All Good",instructionsLives:"• 💗 Hai 3 vite",instructionsTimer:"• ⏰ 60 secondi per giocare",instructionsCatchStars:"• Prendi i power-up stella per evitare danni dalle bottiglie verdi",instructionsAllGoodMode:"• La modalità All Good rende le bottiglie verdi del valore di +1 punto",instructionsHighScore:"• Cerca di ottenere il punteggio più alto possibile!",score:"Punteggio",lives:"Vite",time:"Tempo",allGood:"ALL GOOD",gameInstructions:"Usa le frecce o trascina per muovere il secchio!",gameRules:"🍶 Prendi bottiglie marroni: +1pt | 🟢 Evita bottiglie verdi: -1 vita | ⭐ Stella: All Good!",gameOver:"GAME OVER!",finalScore:"Punteggio Finale",restartMessage:'Clicca "Nuova Partita" per ricominciare',authWelcome:"🎮 Benvenuto su Etimuè Bottle Dropper!",authSignInToPlay:"Accedi per giocare e competere per i premi",authContinueGoogle:"Continua con Google",authContinueEmail:"Continua con Email",authEmailTitle:"📧 Accedi con Email",authEmailSubtitle:"Ti invieremo un codice di verifica",authSendCode:"Invia Codice",authBack:"← Indietro",authVerifyTitle:"🔐 Inserisci Codice di Verifica",authVerifySubtitle:"Controlla la tua email per il codice a 6 cifre",authVerify:"Verifica",authProfileTitle:"👤 Configura il Tuo Profilo",authProfileSubtitle:"Scegli un nickname per la classifica",authNicknamePlaceholder:"Il tuo nickname",authMarketingConsent:"Voglio ricevere aggiornamenti e competere per i premi",authStartPlaying:"Inizia a Giocare!",authProcessing:"Elaborazione...",authEmailPlaceholder:"tua@email.com",authOtpPlaceholder:"000000",authInvalidEmail:"Inserisci un indirizzo email valido",authCodeSent:"Codice di verifica inviato alla tua email!",authInvalidCode:"Codice di verifica non valido",authCodeLength:"Inserisci il codice di verifica a 6 cifre",authFailed:"Autenticazione fallita, riprova",authUnexpectedError:"Errore imprevisto durante l'autenticazione",authGoogleFailed:"Accesso con Google fallito",authSendFailed:"Invio del codice di verifica fallito",authVerifyFailed:"Errore imprevisto durante la verifica",authProfileFailed:"Aggiornamento del profilo fallito",footerControlsCharacter:"Usa le frecce o il mouse per controllare {character}",characterCharlie:"Charlie",characterScrocca:"Scrocca",characterLeprecauno:"Leprecauno"}},w=class w{constructor(){l(this,"currentLanguage","en");l(this,"callbacks",new Set);const e=localStorage.getItem("etimue-language"),t=navigator.language.toLowerCase();e&&e in S?this.currentLanguage=e:t.startsWith("it")?this.currentLanguage="it":this.currentLanguage="en",console.log(`🌍 Language initialized: ${this.currentLanguage}`)}static getInstance(){return w.instance||(w.instance=new w),w.instance}getCurrentLanguage(){return this.currentLanguage}setLanguage(e){e!==this.currentLanguage&&e in S&&(this.currentLanguage=e,localStorage.setItem("etimue-language",e),console.log(`🌍 Language changed to: ${e}`),this.callbacks.forEach(t=>t(e)))}getTranslation(){return S[this.currentLanguage]}translate(e){return S[this.currentLanguage][e]}onLanguageChange(e){this.callbacks.add(e)}offLanguageChange(e){this.callbacks.delete(e)}toggleLanguage(){const e=this.currentLanguage==="en"?"it":"en";this.setLanguage(e)}getAvailableLanguages(){return Object.keys(S)}getLanguageDisplayName(e){switch(e){case"en":return"English";case"it":return"Italiano";default:return e}}};l(w,"instance");let I=w;const u=I.getInstance(),v=class v{constructor(){l(this,"currentCharacter","charlie");l(this,"callbacks",new Set);let e=localStorage.getItem("etimue-character");e==="irlandese"&&(e="leprecauno",localStorage.setItem("etimue-character",e),console.log("🔄 Migrated character from 'irlandese' to 'leprecauno'")),e&&this.isValidCharacter(e)&&(this.currentCharacter=e),console.log(`🐱 Character initialized: ${this.currentCharacter}`)}static getInstance(){return v.instance||(v.instance=new v),v.instance}isValidCharacter(e){return["charlie","scrocca","leprecauno"].includes(e)}getCurrentCharacter(){return this.currentCharacter}setCharacter(e){e!==this.currentCharacter&&this.isValidCharacter(e)&&(this.currentCharacter=e,localStorage.setItem("etimue-character",e),console.log(`🐱 Character changed to: ${e}`),this.callbacks.forEach(t=>t(e)))}getCharacterInfo(e){const t=e||this.currentCharacter,o=u.getTranslation();switch(t){case"charlie":return{id:"charlie",name:o.characterCharlie,sprite:"charlie",description:"Punk cat with attitude"};case"scrocca":return{id:"scrocca",name:o.characterScrocca,sprite:"scrocca",description:"Party cat who loves fun"};case"leprecauno":return{id:"leprecauno",name:o.characterLeprecauno,sprite:"leprecauno",description:"Lucky Irish leprechaun cat"};default:return this.getCharacterInfo("charlie")}}getCurrentCharacterName(){return this.getCharacterInfo().name}getAllCharacters(){return["charlie","scrocca","leprecauno"].map(e=>this.getCharacterInfo(e))}onCharacterChange(e){this.callbacks.add(e)}offCharacterChange(e){this.callbacks.delete(e)}cycleCharacter(){const e=["charlie","scrocca","leprecauno"],o=(e.indexOf(this.currentCharacter)+1)%e.length;this.setCharacter(e[o])}};l(v,"instance");let O=v;const p=O.getInstance();class R extends M.Scene{constructor(){super({key:"GameScene"});l(this,"character");l(this,"bottles");l(this,"powerups");l(this,"score",0);l(this,"lives",3);l(this,"timeLeft",60);l(this,"scoreText");l(this,"livesText");l(this,"timerText");l(this,"powerupText");l(this,"instructionsText");l(this,"rulesText");l(this,"languageChangeCallback");l(this,"spawnTimer");l(this,"powerupTimer");l(this,"gameTimer");l(this,"allGoodTimer");l(this,"gameStarted",!1);l(this,"gameOver",!1);l(this,"allGoodMode",!1);l(this,"allGoodTimeLeft",0);l(this,"gameOverTexts",[])}create(){console.log("🎮 GameScene: Initializing game...");const{width:t,height:o}=this.cameras.main;this.add.image(t/2,o/2,"background"),this.setupUI(),this.setupGameObjects(),this.setupInput(),this.setupCollisions(),this.cameras.main.fadeIn(300,0,0,0),console.log("✅ GameScene: Ready to play!")}setupUI(){const{width:t,height:o}=this.cameras.main,r=u.getTranslation();this.scoreText=this.add.text(16,16,`${r.score}: 0`,{fontSize:"24px",color:"#000000",fontFamily:"Arial"}),this.livesText=this.add.text(16,50,`${r.lives}: ❤️❤️❤️`,{fontSize:"20px",color:"#000000",fontFamily:"Arial"}),this.timerText=this.add.text(t/2,16,`${r.time}: 60s`,{fontSize:"24px",color:"#000000",fontFamily:"Arial"}).setOrigin(.5),this.powerupText=this.add.text(t-16,16,"",{fontSize:"18px",color:"#FFD700",fontFamily:"Arial"}).setOrigin(1,0),this.instructionsText=this.add.text(t/2,o*.12,r.gameInstructions,{fontSize:Math.min(18,t*.025)+"px",color:"#000000",fontFamily:"Arial"}).setOrigin(.5),this.rulesText=this.add.text(t/2,o*.16,r.gameRules,{fontSize:Math.min(14,t*.018)+"px",color:"#333333",fontFamily:"Arial"}).setOrigin(.5),this.languageChangeCallback=()=>{this.updateUITexts()},u.onLanguageChange(this.languageChangeCallback)}updateUITexts(){const t=u.getTranslation();this.scoreText.setText(`${t.score}: ${this.score}`);const o="❤️".repeat(this.lives);this.livesText.setText(`${t.lives}: ${o}`),this.timerText.setText(`${t.time}: ${this.timeLeft}s`),this.instructionsText.setText(t.gameInstructions),this.rulesText.setText(t.gameRules),this.allGoodMode&&this.powerupText.setText(`⭐ ${t.allGood}: ${this.allGoodTimeLeft}s`)}setupGameObjects(){const{width:t,height:o}=this.cameras.main,r=p.getCurrentCharacter();this.character=this.physics.add.image(t/2,o-80,r),this.character.setCollideWorldBounds(!0),this.character.setImmovable(!0),this.character.setScale(.6),p.onCharacterChange(i=>{this.character&&(this.character.setTexture(i),console.log(`🐱 Character sprite updated to: ${i}`))}),this.bottles=this.physics.add.group({defaultKey:"bottle",maxSize:15}),this.powerups=this.physics.add.group({defaultKey:"powerup_star",maxSize:3})}setupInput(){var t;(t=this.input.keyboard)==null||t.createCursorKeys(),this.input.on("pointermove",o=>{if(o.isDown){const{width:r}=this.cameras.main,i=Math.max(40,r*.05);this.character.x=Phaser.Math.Clamp(o.x,i,r-i)}}),this.input.on("pointerdown",()=>{this.gameOver||this.startGame()})}setupCollisions(){this.physics.add.overlap(this.character,this.bottles,this.catchBottle,void 0,this),this.physics.add.overlap(this.character,this.powerups,this.catchPowerup,void 0,this)}startGame(){if(this.gameStarted)return;this.gameOverTexts.forEach(o=>o.destroy()),this.gameOverTexts=[],this.lives=3,this.score=0,this.timeLeft=60,this.gameOver=!1,this.allGoodMode=!1,this.allGoodTimeLeft=0,this.updateLivesDisplay();const t=u.getTranslation();this.scoreText.setText(`${t.score}: ${this.score}`),this.timerText.setText(`${t.time}: ${this.timeLeft}s`),this.powerupText.setText(""),this.gameStarted=!0,console.log("🚀 GAME START DEBUG (RESET):"),console.log(`💗 Starting Lives: ${this.lives}`),console.log(`🎯 Starting Score: ${this.score}`),console.log(`⏰ Starting Time: ${this.timeLeft}s`),console.log(`⭐ All Good Mode: ${this.allGoodMode}`),this.spawnTimer=this.time.addEvent({delay:1e3,callback:this.spawnBottle,callbackScope:this,loop:!0}),this.scheduleNextPowerup(),this.gameTimer=this.time.addEvent({delay:1e3,callback:this.updateTimer,callbackScope:this,loop:!0})}spawnBottle(){if(this.gameOver)return;const{width:t}=this.cameras.main,o=60,r=t-60,i=Phaser.Math.Between(o,r),s=Math.random()<.2,n=this.bottles.get(i,-50,"bottle");n&&(n.setActive(!0),n.setVisible(!0),s?(n.setTexture("bottle_green"),console.log(`🟢 GREEN bottle spawned at x:${i}`)):(n.setTexture("bottle"),console.log(`🍶 BROWN bottle spawned at x:${i}`)),n.body.velocity.y=200,n.body.velocity.x=Phaser.Math.Between(-50,50),n.body.setCollideWorldBounds(!0),n.body.setBounce(0),n.setData("checkGround",!0),n.setData("isGreen",s))}scheduleNextPowerup(){if(this.gameOver)return;const t=5e3,o=3e4,r=Math.random(),i=Math.pow(r,1.5),s=t+(o-t)*i;console.log(`⭐ Next power-up scheduled in ${(s/1e3).toFixed(1)}s`),this.powerupTimer=this.time.addEvent({delay:s,callback:()=>{this.spawnPowerup(),this.scheduleNextPowerup()},callbackScope:this})}spawnPowerup(){if(this.gameOver)return;const{width:t}=this.cameras.main,o=80,r=t-80,i=Phaser.Math.Between(o,r),s=this.powerups.get(i,-30,"powerup_star");if(s){s.setActive(!0),s.setVisible(!0);const n=Phaser.Math.Between(120,180),c=Phaser.Math.Between(-30,30);s.body.velocity.y=n,s.body.velocity.x=c,s.body.setCollideWorldBounds(!0),s.body.setBounce(0),s.setData("checkGround",!0),console.log(`⭐ Power-up spawned at x:${i} with velocity(${c}, ${n})`)}}catchBottle(t,o){if(!o.active)return;const r=o.getData("isGreen");if(console.log("🎯 BOTTLE CATCH DEBUG:"),console.log(`🍶 Bottle type: ${r?"GREEN (poison)":"BROWN (normal)"}`),console.log(`⭐ All Good Mode: ${this.allGoodMode}`),console.log(`💗 Lives before catch: ${this.lives}`),this.bottles.killAndHide(o),o.setActive(!1),o.setVisible(!1),r&&!this.allGoodMode)console.log("🚨 GREEN BOTTLE CAUGHT WITHOUT ALL GOOD - LOSING LIFE!"),this.loseLife();else{this.score+=1;const i=u.getTranslation();this.scoreText.setText(`${i.score}: ${this.score}`),console.log(`✅ ${r?"Green bottle (All Good active)":"Brown bottle"} caught! +1 point. Score: ${this.score}`)}}catchPowerup(t,o){o.active&&(console.log("⭐ POWERUP CATCH DEBUG:"),console.log(`💗 Lives before powerup: ${this.lives}`),this.powerups.killAndHide(o),o.setActive(!1),o.setVisible(!1),this.activateAllGoodMode(),console.log(`✅ Power-up caught! All Good mode activated! Lives unchanged: ${this.lives}`))}loseLife(){if(this.gameOver)return;const t=new Error().stack;console.warn("🚨 LIFE LOST DEBUG:"),console.warn(`💔 Lives before: ${this.lives}`),console.warn("🔍 Called from:",t==null?void 0:t.split(`
`).slice(1,4)),console.warn(`⭐ All Good Mode: ${this.allGoodMode}`),this.lives-=1,this.updateLivesDisplay(),console.warn(`💔 Lives after: ${this.lives}`),this.lives<=0&&(console.warn("☠️ GAME OVER - No lives remaining"),this.endGame())}updateLivesDisplay(){const t="❤️".repeat(this.lives),o=u.getTranslation();this.livesText.setText(`${o.lives}: ${t}`)}updateTimer(){if(this.gameOver)return;this.timeLeft-=1;const t=u.getTranslation();this.timerText.setText(`${t.time}: ${this.timeLeft}s`),this.timeLeft<=0&&this.endGame()}activateAllGoodMode(){this.allGoodMode=!0,this.allGoodTimeLeft=10;const t=u.getTranslation();this.powerupText.setText(`⭐ ${t.allGood}: ${this.allGoodTimeLeft}s`),this.allGoodTimer&&this.allGoodTimer.destroy(),this.allGoodTimer=this.time.addEvent({delay:1e3,callback:this.updateAllGoodMode,callbackScope:this,loop:!0})}updateAllGoodMode(){if(!this.allGoodMode)return;this.allGoodTimeLeft-=1;const t=u.getTranslation();this.powerupText.setText(`⭐ ${t.allGood}: ${this.allGoodTimeLeft}s`),this.allGoodTimeLeft<=0&&this.deactivateAllGoodMode()}deactivateAllGoodMode(){this.allGoodMode=!1,this.allGoodTimeLeft=0,this.powerupText.setText(""),this.allGoodTimer&&this.allGoodTimer.destroy(),console.log("⭐ All Good mode deactivated")}endGame(){this.gameOver=!0,this.gameStarted=!1,this.spawnTimer&&this.spawnTimer.destroy(),this.powerupTimer&&this.powerupTimer.destroy(),this.gameTimer&&this.gameTimer.destroy(),this.allGoodTimer&&this.allGoodTimer.destroy(),this.deactivateAllGoodMode();const{width:t,height:o}=this.cameras.main,r=u.getTranslation(),i=this.add.text(t/2,o/2,r.gameOver,{fontSize:Math.min(48,t*.06)+"px",color:"#ff0000",fontFamily:"Arial"}).setOrigin(.5),s=this.add.text(t/2,o/2+50,`${r.finalScore}: ${this.score}`,{fontSize:Math.min(24,t*.03)+"px",color:"#000000",fontFamily:"Arial"}).setOrigin(.5),n=this.add.text(t/2,o/2+100,r.restartMessage,{fontSize:Math.min(18,t*.025)+"px",color:"#666666",fontFamily:"Arial"}).setOrigin(.5);this.gameOverTexts.push(i,s,n),console.log(`🎮 Game Over! Final Score: ${this.score}`)}update(){var i,s,n;if(this.gameOver)return;const{width:t,height:o}=this.cameras.main,r=(i=this.input.keyboard)==null?void 0:i.createCursorKeys();if(r){const c=Math.max(40,t*.05),h=Math.max(5,t*.006);(s=r.left)!=null&&s.isDown?this.character.x=Math.max(c,this.character.x-h):(n=r.right)!=null&&n.isDown&&(this.character.x=Math.min(t-c,this.character.x+h))}this.bottles.children.entries.forEach(c=>{if(c.active&&c.getData("checkGround")&&c.y>=o-20){const h=c.getData("isGreen");console.log(`🌍 GROUND HIT: ${h?"GREEN":"BROWN"} bottle hit ground - NO LIFE LOSS`),this.bottles.killAndHide(c),c.setActive(!1),c.setVisible(!1)}}),this.powerups.children.entries.forEach(c=>{c.active&&c.getData("checkGround")&&c.y>=o-20&&(this.powerups.killAndHide(c),c.setActive(!1),c.setVisible(!1))})}shutdown(){this.spawnTimer&&this.spawnTimer.destroy(),this.powerupTimer&&this.powerupTimer.destroy(),this.gameTimer&&this.gameTimer.destroy(),this.allGoodTimer&&this.allGoodTimer.destroy(),this.languageChangeCallback&&u.offLanguageChange(this.languageChangeCallback)}}const V={type:Phaser.AUTO,width:800,height:600,parent:"game-container",backgroundColor:"#87CEEB",scale:{mode:Phaser.Scale.FIT,autoCenter:Phaser.Scale.CENTER_BOTH,min:{width:300,height:400},max:{width:1200,height:900}},physics:{default:"arcade",arcade:{gravity:{x:0,y:300},debug:!1}},scene:[U,R]};let f=null,T=!1;function W(){return T?(console.warn("🔄 Game initialization already in progress, returning existing instance"),f):(f&&(console.log("🔄 Destroying existing game instance before creating new one"),T=!0,f.destroy(!0),setTimeout(()=>{T=!1},100)),T=!0,f=new M.Game(V),T=!1,console.log("✅ Game initialized successfully"),f)}function B(){return f}function q(){f&&(f.destroy(!0),f=null)}const $="https://xtpfssiraytzvdvgrsol.supabase.co",X="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Inh0cGZzc2lyYXl0enZkdmdyc29sIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTYyNjM1NzcsImV4cCI6MjA3MTgzOTU3N30.sr3C3c9vEC2yuM4k503_EcXjKp7kfX5TZx9uBM53UOw";console.log("🔍 Environment check:",{url:"SET",key:"SET",env:{VITE_SUPABASE_URL:"https://xtpfssiraytzvdvgrsol.supabase.co",VITE_SUPABASE_ANON_KEY:"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Inh0cGZzc2lyYXl0enZkdmdyc29sIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTYyNjM1NzcsImV4cCI6MjA3MTgzOTU3N30.sr3C3c9vEC2yuM4k503_EcXjKp7kfX5TZx9uBM53UOw",VITE_ADMIN_UUIDS:"470c82f5-3997-4d93-a433-4dfee4a199c2",VITE_USER_NODE_ENV:"development",BASE_URL:"/",MODE:"production",DEV:!0,PROD:!1,SSR:!1}});const d=z($,X,{auth:{autoRefreshToken:!0,persistSession:!0,detectSessionInUrl:!0,flowType:"pkce"}}),x={async getProfile(a){try{const{data:e,error:t}=await d.from("profiles").select("*").eq("id",a).maybeSingle();return t?(console.error("Error fetching profile:",t),null):e}catch(e){return console.error("Profile fetch exception:",e),null}},async createProfile(a){try{const{data:e,error:t}=await d.from("profiles").upsert(a,{onConflict:"id",ignoreDuplicates:!1}).select().single();return t?(console.error("Error creating profile:",t),null):e}catch(e){return console.error("Profile creation exception:",e),null}},async updateProfile(a,e){try{const{data:t,error:o}=await d.from("profiles").update(e).eq("id",a).select().single();return o?(console.error("Error updating profile:",o),null):t}catch(t){return console.error("Profile update exception:",t),null}},async checkNicknameAvailability(a,e){try{if(!a||a.trim().length===0)return!0;const t=d.from("profiles").select("id").eq("nickname",a.trim());e&&t.neq("id",e);const{data:o,error:r}=await t;return r?(console.error("Error checking nickname availability:",r),!1):o.length===0}catch(t){return console.error("Nickname availability check exception:",t),!1}}},ee={async submitScore(a,e,t){try{const{data:{session:o},error:r}=await d.auth.getSession();if(r||!o)return console.error("No valid session for score submission"),null;try{const{data:n,error:c}=await d.functions.invoke("submit-score",{body:{score:e,runSeconds:t,gameEndTimestamp:Date.now()},headers:{Authorization:`Bearer ${o.access_token}`}});if(c)throw c;if(n.success)return console.log("Score submitted via Edge Function:",n.storedScore),{id:n.storedScore.id,user_id:a,score:n.storedScore.score,run_seconds:n.storedScore.runSeconds,created_at:new Date().toISOString()}}catch(n){console.warn("Edge Function failed, using fallback:",n)}if(e<0||e>600)return console.error("Invalid score range:",e),null;if(t<5)return console.error("Game too short, likely invalid:",t),null;const{data:i,error:s}=await d.from("scores").insert({user_id:a,score:e,run_seconds:t}).select().single();return s?(console.error("Database error submitting score:",s),null):(console.log("Score submitted via direct database:",i),i)}catch(o){return console.error("Score submission error:",o),null}},async getWeeklyLeaderboard(a=50){try{console.log("🏆 Starting weekly leaderboard query..."),console.log("🔌 Supabase client status:",{url:$,connected:!0}),console.log("🧪 Testing Supabase connection...");try{const h=d.from("scores").select("count",{count:"exact",head:!0}),m=new Promise((b,g)=>setTimeout(()=>g(new Error("Connection test timeout")),5e3));await Promise.race([h,m]),console.log("✅ Supabase connection test passed")}catch(h){throw console.error("❌ Supabase connection test failed:",h),new Error("Database connection failed")}const e=new Date,t=new Date(e);t.setDate(e.getDate()-3),t.setHours(0,0,0,0),console.log(`📅 Optimized range: Last 3 days from ${t.toISOString()} to ${e.toISOString()}`),console.log(`📋 Querying recent scores since: ${t.toISOString()}`);const o=d.from("scores").select("*").gte("created_at",t.toISOString()).order("score",{ascending:!1}).order("created_at",{ascending:!0}).limit(Math.min(a,20)),r=new Promise((h,m)=>setTimeout(()=>m(new Error("Database query timeout")),3e4));let{data:i,error:s}=await Promise.race([o,r]),n=i;if(s){console.error("Primary query failed, trying fallback...",s);try{const h=new Date;h.setHours(0,0,0,0),console.log("🔄 Attempting fallback: Today only query...");const m=d.from("scores").select("id, user_id, score, run_seconds, created_at").gte("created_at",h.toISOString()).order("score",{ascending:!1}).limit(10),b=new Promise((E,F)=>setTimeout(()=>F(new Error("Fallback timeout")),15e3)),{data:g,error:k}=await Promise.race([m,b]);if(!k&&g)console.log(`✅ Fallback successful: ${g.length} today's scores`),n=g,s=null;else return console.error("Fallback also failed:",k),[]}catch(h){return console.error("Fallback exception:",h),[]}}if(!n)return console.error("No data received from queries"),[];console.log(`📊 Found ${n.length} scores, fetching nicknames...`),console.log(`📝 Batch fetching ${n.length} profiles with 3s timeout each...`);const c=await Promise.all(n.map(async h=>{try{const m=x.getProfile(h.user_id),b=new Promise((k,E)=>setTimeout(()=>E(new Error("Profile fetch timeout")),3e3)),g=await Promise.race([m,b]);return{...h,nickname:(g==null?void 0:g.nickname)||"Anonimo"}}catch{return{...h,nickname:"Anonimo"}}}));return console.log(`✅ Weekly leaderboard loaded: ${c.length} entries`),c}catch(e){return console.error("Weekly leaderboard exception:",e),[]}},async getMonthlyLeaderboard(a=50){try{const e=new Date,t=new Date(e.getFullYear(),e.getMonth(),1);console.log(`📋 Querying monthly scores since: ${t.toISOString()}`);const o=d.from("scores").select("*").gte("created_at",t.toISOString()).order("score",{ascending:!1}).order("created_at",{ascending:!0}).limit(a),r=new Promise((c,h)=>setTimeout(()=>h(new Error("Database query timeout")),1e4)),{data:i,error:s}=await Promise.race([o,r]);if(s)return console.error("Error fetching monthly leaderboard:",s),[];console.log(`📊 Found ${(i==null?void 0:i.length)||0} monthly scores, fetching nicknames...`);const n=await Promise.all(i.map(async(c,h)=>{try{console.log(`📝 Fetching profile ${h+1}/${i.length} for user ${c.user_id}`);const m=x.getProfile(c.user_id),b=new Promise((k,E)=>setTimeout(()=>E(new Error("Profile fetch timeout")),5e3)),g=await Promise.race([m,b]);return{...c,nickname:(g==null?void 0:g.nickname)||"Anonimo"}}catch(m){return console.warn(`⚠️ Failed to fetch profile for user ${c.user_id}:`,m),{...c,nickname:"Anonimo"}}}));return console.log(`✅ Monthly leaderboard loaded: ${n.length} entries`),n}catch(e){return console.error("Monthly leaderboard exception:",e),[]}}};class H{constructor(){l(this,"state",{user:null,profile:null,session:null,isLoading:!0,isAuthenticated:!1,hasMarketingConsent:!1});l(this,"listeners",[]);l(this,"isProcessingAuth",!1);this.initializeAuth(),this.setupAuthListeners()}async initializeAuth(){try{console.log("🔄 Initializing auth...");const e=d.auth.getSession(),t=new Promise((i,s)=>setTimeout(()=>s(new Error("Session timeout")),5e3)),{data:{session:o},error:r}=await Promise.race([e,t]);r&&console.error("Error getting session:",r),o?(console.log("✅ Session found, processing auth..."),await this.handleAuthChange(o)):console.log("ℹ️ No active session")}catch(e){console.error("Auth initialization error:",e)}finally{this.state.isLoading=!1,this.notifyListeners(),console.log("✅ Auth initialization complete")}}setupAuthListeners(){d.auth.onAuthStateChange(async(e,t)=>{switch(console.log("🔄 Auth state change:",e),e){case"SIGNED_IN":t&&await this.handleAuthChange(t);break;case"SIGNED_OUT":this.resetAuthState();break;case"TOKEN_REFRESHED":t&&(this.state.session=t,this.state.user=t.user);break}this.notifyListeners()})}async handleAuthChange(e){var t,o;if(this.isProcessingAuth){console.log("⏳ Already processing auth, skipping...");return}this.isProcessingAuth=!0;try{console.log("👤 Processing auth for user:",e.user.email),this.state.session=e,this.state.user=e.user,this.state.isAuthenticated=!0;let r=await x.getProfile(e.user.id);r||(console.log("📝 Creating new profile..."),r=await x.createProfile({email:e.user.email||"",nickname:((t=e.user.user_metadata)==null?void 0:t.name)||((o=e.user.user_metadata)==null?void 0:o.full_name)||null,consent_marketing:!1,consent_timestamp:null})),this.state.profile=r,this.state.hasMarketingConsent=(r==null?void 0:r.consent_marketing)||!1,console.log("✅ Auth processing complete:",{email:e.user.email,hasProfile:!!r,hasConsent:this.state.hasMarketingConsent})}catch(r){console.error("❌ Error processing auth:",r)}finally{this.state.isLoading=!1,this.isProcessingAuth=!1}}resetAuthState(){this.state={user:null,profile:null,session:null,isLoading:!1,isAuthenticated:!1,hasMarketingConsent:!1}}notifyListeners(){this.listeners.forEach(e=>{try{e(this.state)}catch(t){console.error("Error in auth listener:",t)}})}subscribe(e){return this.listeners.push(e),e(this.state),()=>{const t=this.listeners.indexOf(e);t>-1&&this.listeners.splice(t,1)}}getState(){return{...this.state}}isReady(){return!this.state.isLoading}canPlayGame(){return this.state.isAuthenticated}canCompeteForPrizes(){return this.state.isAuthenticated&&this.state.hasMarketingConsent}async signInWithGoogle(){try{const e=window.location.origin;let t=e;e.includes("etimuebottledropper.netlify.app")?(t="https://astounding-rolypoly-fc5137.netlify.app",console.warn("⚠️ Using fallback domain for OAuth due to Google Cloud Console configuration")):e.includes("astounding-rolypoly-fc5137.netlify.app")?t="https://astounding-rolypoly-fc5137.netlify.app":e==="http://localhost:3000"?t="http://localhost:3000":t="https://etimuebottledropper.netlify.app",console.log("🔐 Starting Google OAuth with redirect to:",t);const{error:o}=await d.auth.signInWithOAuth({provider:"google",options:{redirectTo:t,queryParams:{access_type:"offline",prompt:"consent"}}});return o?(console.error("Google sign in error:",o),{success:!1,error:o.message}):{success:!0}}catch(e){return console.error("Google sign in exception:",e),{success:!1,error:"Unexpected error during sign in"}}}async signInWithOTP(e){try{const{error:t}=await d.auth.signInWithOtp({email:e});return t?(console.error("OTP sign in error:",t),{success:!1,error:t.message}):{success:!0}}catch(t){return console.error("OTP sign in exception:",t),{success:!1,error:"Unexpected error during sign in"}}}async verifyOTP(e,t){try{const{error:o}=await d.auth.verifyOtp({email:e,token:t,type:"email"});return o?(console.error("OTP verification error:",o),{success:!1,error:o.message}):{success:!0}}catch(o){return console.error("OTP verification exception:",o),{success:!1,error:"Unexpected error during verification"}}}async signOut(){try{const{error:e}=await d.auth.signOut();if(e)throw e}catch(e){throw console.error("Sign out error:",e),e}}async updateProfile(e){if(!this.state.user)throw new Error("No authenticated user");try{const t=await x.updateProfile(this.state.user.id,e);return t&&(this.state.profile=t,"consent_marketing"in e&&(this.state.hasMarketingConsent=t.consent_marketing),this.notifyListeners()),t}catch(t){throw console.error("Profile update error:",t),t}}async refreshProfile(){if(this.state.user)try{const e=await x.getProfile(this.state.user.id);e&&(this.state.profile=e,this.state.hasMarketingConsent=e.consent_marketing,this.notifyListeners())}catch(e){console.error("Profile refresh error:",e)}}destroy(){this.listeners=[]}}const y=new H,j=async()=>{if(console.log("🎮 Checking auth for game access..."),y.canPlayGame())return console.log("✅ User can play!"),!0;if(y.isReady()||(console.log("⏳ Waiting for auth to initialize..."),await new Promise(e=>{const t=y.subscribe(o=>{o.isLoading||(t(),e())})})),!y.canPlayGame())return console.log("🔐 Showing auth modal..."),new Promise(e=>{D(()=>import("./AuthModal-8f594c27.js"),["assets/AuthModal-8f594c27.js","assets/supabase-2481e69c.js","assets/phaser-f8c8a439.js"]).then(({AuthModal:t})=>{const o=new t;o.onAuth(r=>{o.destroy(),e(r&&y.canPlayGame())}),o.show()}).catch(t=>{console.error("Failed to load AuthModal:",t),e(!1)})});const a=y.canPlayGame();return console.log("🎯 Final auth check result:",a),a};let P=!1;function J(){function a(){const t=u.getTranslation();document.querySelectorAll("[data-i18n]").forEach(i=>{const s=i.getAttribute("data-i18n");s&&s in t&&(s==="footerControls"?e():i.textContent=t[s])});const o=document.getElementById("language-btn");if(o){const i=u.getCurrentLanguage();o.textContent=`🌍 ${i.toUpperCase()}`}const r=document.getElementById("character-btn");if(r){const i=p.getCurrentCharacterName();r.textContent=`🐱 ${i}`}document.documentElement.lang=u.getCurrentLanguage()}function e(){const t=document.querySelector('[data-i18n="footerControls"]');if(t){const o=u.getTranslation(),r=p.getCurrentCharacterName();t.textContent=o.footerControlsCharacter.replace("{character}",r)}}u.onLanguageChange(a),p.onCharacterChange(()=>{e();const t=document.getElementById("character-btn");if(t){const o=p.getCurrentCharacterName();t.textContent=`🐱 ${o}`}}),a()}window.startNewGame=async function(){if(console.log("🎮 Starting new game..."),!await j()){console.log("❌ User not authenticated, game start cancelled");return}console.log("✅ User authenticated, starting game...");const e=document.getElementById("game-start-overlay");e&&(e.classList.add("hidden"),console.log("🎮 Game start overlay hidden")),B()&&(console.log("🔄 Destroying existing game instance"),q());const o=W();let r=0;const i=20,s=()=>{r++;const n=o.scene.getScene("GameScene");n&&n.scene.isActive("GameScene")&&n.character?(console.log("🚀 Auto-starting game after authentication (attempt "+r+")"),n.input.emit("pointerdown",{isDown:!0})):r<i?(console.log(`⏳ GameScene not ready yet, retrying... (attempt ${r}/${i})`),setTimeout(s,200)):console.warn("⚠️ GameScene auto-start timeout after "+r*200+"ms")};setTimeout(s,300)};window.togglePause=function(){const a=B();if(a)if(P=!P,P){a.scene.pause("GameScene");const e=u.getTranslation();document.querySelector(".btn:nth-child(2)").textContent="▶️ "+e.resume,console.log("⏸️ Game paused")}else{a.scene.resume("GameScene");const e=u.getTranslation();document.querySelector(".btn:nth-child(2)").textContent="⏸️ "+e.pause,console.log("▶️ Game resumed")}};window.showInstructions=function(){const a=document.getElementById("instructions-modal");a&&(a.style.display="block",console.log("📖 Instructions modal opened"))};window.closeInstructions=function(){const a=document.getElementById("instructions-modal");a&&(a.style.display="none",console.log("📖 Instructions modal closed"))};window.onclick=function(a){const e=document.getElementById("instructions-modal");a.target===e&&closeInstructions()};let L=null;window.showLeaderboard=function(){console.log("🏆 Opening leaderboard..."),D(()=>import("./LeaderboardModal-1941094b.js"),["assets/LeaderboardModal-1941094b.js","assets/supabase-2481e69c.js","assets/phaser-f8c8a439.js"]).then(({LeaderboardModal:a})=>{L||(L=new a),L.show()}).catch(a=>{console.error("❌ Failed to load LeaderboardModal:",a);const e=y.getState().isAuthenticated;alert(e?"Errore nel caricamento della classifica. Riprova più tardi.":"Accedi per vedere la classifica!")})};window.toggleLanguage=function(){u.toggleLanguage(),console.log(`🌍 Language toggled to: ${u.getCurrentLanguage()}`)};window.cycleCharacter=function(){p.cycleCharacter(),console.log(`🐱 Character changed to: ${p.getCurrentCharacterName()}`)};window.showGameStartOverlay=function(){const a=document.getElementById("game-start-overlay");a&&(a.classList.remove("hidden"),console.log("🎮 Game start overlay shown"))};window.hideGameStartOverlay=function(){const a=document.getElementById("game-start-overlay");a&&(a.classList.add("hidden"),console.log("🎮 Game start overlay hidden"))};let A=null,C=!1,G=!1;function Y(){if(A=B(),!A)return;const a=A.scene.getScene("GameScene");if(a){if(C&&a.character){const{width:e}=a.cameras.main,t=Math.max(40,e*.05),o=Math.max(5,e*.006);a.character.x=Math.max(t,a.character.x-o)}if(G&&a.character){const{width:e}=a.cameras.main,t=Math.max(40,e*.05),o=Math.max(5,e*.006);a.character.x=Math.min(e-t,a.character.x+o)}}}document.addEventListener("DOMContentLoaded",function(){console.log("🚀 Etimuè Bottle Dropper v2.0.0 loaded!"),J();const a=document.getElementById("touch-left"),e=document.getElementById("touch-right");a&&e&&(a.addEventListener("touchstart",t=>{t.preventDefault(),C=!0}),a.addEventListener("touchend",t=>{t.preventDefault(),C=!1}),a.addEventListener("mousedown",t=>{t.preventDefault(),C=!0}),a.addEventListener("mouseup",t=>{t.preventDefault(),C=!1}),e.addEventListener("touchstart",t=>{t.preventDefault(),G=!0}),e.addEventListener("touchend",t=>{t.preventDefault(),G=!1}),e.addEventListener("mousedown",t=>{t.preventDefault(),G=!0}),e.addEventListener("mouseup",t=>{t.preventDefault(),G=!1}),setInterval(Y,16))});export{y as a,u as l,ee as s};
//# sourceMappingURL=index-a7dd0995.js.map
