{"version":3,"file":"LeaderboardModal-1941094b.js","sources":["../../src/ui/LeaderboardModal.ts"],"sourcesContent":["import { languageManager } from '../i18n/LanguageManager'\r\nimport { scoreService } from '../systems/SupabaseClient'\r\nimport { authManager } from '../systems/AuthManager'\r\n\r\nexport interface LeaderboardEntry {\r\n  id: number\r\n  score: number\r\n  run_seconds: number\r\n  created_at: string\r\n  nickname: string\r\n  user_id: string\r\n}\r\n\r\nexport class LeaderboardModal {\r\n  private modal: HTMLElement | null = null\r\n  private currentView: 'weekly' | 'monthly' = 'weekly'\r\n  private isLoading = false\r\n\r\n  constructor() {\r\n    this.createModal()\r\n    this.setupEventListeners()\r\n  }\r\n\r\n  private createModal(): void {\r\n    this.modal = document.createElement('div')\r\n    this.modal.id = 'leaderboard-modal'\r\n    this.modal.className = 'leaderboard-modal'\r\n    this.modal.style.display = 'none'\r\n\r\n    this.modal.innerHTML = `\r\n      <div class=\"leaderboard-modal-backdrop\"></div>\r\n      <div class=\"leaderboard-modal-content\">\r\n        <button class=\"leaderboard-close-btn\" id=\"leaderboard-close\">&times;</button>\r\n\r\n        <div class=\"leaderboard-header\">\r\n          <h2 class=\"leaderboard-title\" data-i18n=\"leaderboardTitle\">üèÜ Classifica</h2>\r\n          <div class=\"leaderboard-tabs\">\r\n            <button class=\"leaderboard-tab active\" data-tab=\"weekly\" data-i18n=\"leaderboardWeekly\">\r\n              üìÖ Settimanale\r\n            </button>\r\n            <button class=\"leaderboard-tab\" data-tab=\"monthly\" data-i18n=\"leaderboardMonthly\">\r\n              üìÜ Mensile\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"leaderboard-content\">\r\n          <div class=\"leaderboard-loading\" id=\"leaderboard-loading\">\r\n            <div class=\"spinner\"></div>\r\n            <p data-i18n=\"leaderboardLoading\">Caricamento classifica...</p>\r\n          </div>\r\n\r\n          <div class=\"leaderboard-list\" id=\"leaderboard-list\">\r\n            <!-- Dynamic content -->\r\n          </div>\r\n\r\n          <div class=\"leaderboard-empty\" id=\"leaderboard-empty\" style=\"display: none\">\r\n            <p data-i18n=\"leaderboardEmpty\">Nessun punteggio ancora registrato!</p>\r\n            <p class=\"leaderboard-encourage\" data-i18n=\"leaderboardEncourage\">\r\n              Sii il primo a giocare e stabilire il record!\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"leaderboard-footer\">\r\n          <p class=\"leaderboard-info\" data-i18n=\"leaderboardInfo\">\r\n            üí° Accedi per competere per i premi settimanali e mensili!\r\n          </p>\r\n        </div>\r\n      </div>\r\n    `\r\n\r\n    document.body.appendChild(this.modal)\r\n  }\r\n\r\n  private setupEventListeners(): void {\r\n    // Close button\r\n    const closeBtn = this.modal?.querySelector('#leaderboard-close')\r\n    closeBtn?.addEventListener('click', () => this.hide())\r\n\r\n    // Backdrop click\r\n    const backdrop = this.modal?.querySelector('.leaderboard-modal-backdrop')\r\n    backdrop?.addEventListener('click', () => this.hide())\r\n\r\n    // Tab switching\r\n    const tabs = this.modal?.querySelectorAll('.leaderboard-tab')\r\n    tabs?.forEach(tab => {\r\n      tab.addEventListener('click', (e) => {\r\n        const target = e.target as HTMLElement\r\n        const tabType = target.getAttribute('data-tab') as 'weekly' | 'monthly'\r\n        this.switchTab(tabType)\r\n      })\r\n    })\r\n\r\n    // Language change listener\r\n    languageManager.onLanguageChange(() => {\r\n      this.updateTranslations()\r\n    })\r\n\r\n    // ESC key\r\n    document.addEventListener('keydown', (e) => {\r\n      if (e.key === 'Escape' && this.modal?.style.display !== 'none') {\r\n        this.hide()\r\n      }\r\n    })\r\n  }\r\n\r\n  private updateTranslations(): void {\r\n    if (!this.modal) return\r\n\r\n    const translation = languageManager.getTranslation()\r\n    this.modal.querySelectorAll('[data-i18n]').forEach(element => {\r\n      const key = element.getAttribute('data-i18n')\r\n      if (key && key in translation) {\r\n        element.textContent = (translation as any)[key]\r\n      }\r\n    })\r\n  }\r\n\r\n  private switchTab(tab: 'weekly' | 'monthly'): void {\r\n    if (this.currentView === tab || this.isLoading) return\r\n\r\n    this.currentView = tab\r\n\r\n    // Update tab UI\r\n    const tabs = this.modal?.querySelectorAll('.leaderboard-tab')\r\n    tabs?.forEach(tabEl => {\r\n      tabEl.classList.remove('active')\r\n      if (tabEl.getAttribute('data-tab') === tab) {\r\n        tabEl.classList.add('active')\r\n      }\r\n    })\r\n\r\n    // Load new data\r\n    this.loadLeaderboard()\r\n  }\r\n\r\n  private async loadLeaderboard(): Promise<void> {\r\n    if (!this.modal || this.isLoading) return\r\n\r\n    this.isLoading = true\r\n    this.showLoading()\r\n\r\n    try {\r\n      console.log(`üèÜ Loading ${this.currentView} leaderboard...`)\r\n\r\n      let entries: LeaderboardEntry[] = []\r\n\r\n      if (this.currentView === 'weekly') {\r\n        entries = await this.getWeeklyLeaderboard()\r\n      } else {\r\n        entries = await this.getMonthlyLeaderboard()\r\n      }\r\n\r\n      this.renderLeaderboard(entries)\r\n\r\n    } catch (error) {\r\n      console.error('Error loading leaderboard:', error)\r\n      this.showError()\r\n    } finally {\r\n      this.isLoading = false\r\n      this.hideLoading()\r\n    }\r\n  }\r\n\r\n  private async getWeeklyLeaderboard(): Promise<LeaderboardEntry[]> {\r\n    // Simplified version - get scores directly from scores table\r\n    // TODO: Add proper join with profiles when nickname column is available\r\n    console.log('üìû Calling scoreService.getWeeklyLeaderboard(50)...')\r\n\r\n    try {\r\n      const entries = await scoreService.getWeeklyLeaderboard(50)\r\n      console.log('‚úÖ scoreService.getWeeklyLeaderboard completed with:', entries?.length, 'entries')\r\n      return entries.map(entry => ({\r\n        id: entry.id,\r\n        score: entry.score,\r\n        run_seconds: entry.run_seconds,\r\n        created_at: entry.created_at,\r\n        nickname: entry.nickname || 'Anonimo',\r\n        user_id: entry.user_id\r\n      }))\r\n    } catch (error) {\r\n      console.error('‚ùå scoreService.getWeeklyLeaderboard failed:', error)\r\n      throw error\r\n    }\r\n  }\r\n\r\n  private async getMonthlyLeaderboard(): Promise<LeaderboardEntry[]> {\r\n    // Simplified version - get scores directly from scores table\r\n    const entries = await scoreService.getMonthlyLeaderboard(50)\r\n    return entries.map(entry => ({\r\n      id: entry.id,\r\n      score: entry.score,\r\n      run_seconds: entry.run_seconds,\r\n      created_at: entry.created_at,\r\n      nickname: entry.nickname || 'Anonimo',\r\n      user_id: entry.user_id\r\n    }))\r\n  }\r\n\r\n  private renderLeaderboard(entries: LeaderboardEntry[]): void {\r\n    if (!this.modal) return\r\n\r\n    const listContainer = this.modal.querySelector('#leaderboard-list') as HTMLElement\r\n    const emptyContainer = this.modal.querySelector('#leaderboard-empty') as HTMLElement\r\n\r\n    if (entries.length === 0) {\r\n      listContainer.style.display = 'none'\r\n      emptyContainer.style.display = 'block'\r\n      return\r\n    }\r\n\r\n    emptyContainer.style.display = 'none'\r\n    listContainer.style.display = 'block'\r\n\r\n    const currentUserId = authManager.getState().user?.id\r\n\r\n    listContainer.innerHTML = entries.map((entry, index) => {\r\n      const position = index + 1\r\n      const isCurrentUser = currentUserId === entry.user_id\r\n      const medal = position <= 3 ? this.getMedal(position) : `${position}.`\r\n\r\n      const date = new Date(entry.created_at).toLocaleDateString(\r\n        languageManager.getCurrentLanguage() === 'it' ? 'it-IT' : 'en-US',\r\n        { month: 'short', day: 'numeric', hour: '2-digit', minute: '2-digit' }\r\n      )\r\n\r\n      return `\r\n        <div class=\"leaderboard-entry ${isCurrentUser ? 'current-user' : ''}\">\r\n          <div class=\"leaderboard-position\">${medal}</div>\r\n          <div class=\"leaderboard-player\">\r\n            <div class=\"leaderboard-nickname\">${entry.nickname}</div>\r\n            <div class=\"leaderboard-date\">${date}</div>\r\n          </div>\r\n          <div class=\"leaderboard-score\">\r\n            <div class=\"score-value\">${entry.score}</div>\r\n            <div class=\"score-time\">${entry.run_seconds}s</div>\r\n          </div>\r\n        </div>\r\n      `\r\n    }).join('')\r\n  }\r\n\r\n  private getMedal(position: number): string {\r\n    switch (position) {\r\n      case 1: return 'ü•á'\r\n      case 2: return 'ü•à'\r\n      case 3: return 'ü•â'\r\n      default: return `${position}.`\r\n    }\r\n  }\r\n\r\n  private showLoading(): void {\r\n    if (!this.modal) return\r\n\r\n    const loading = this.modal.querySelector('#leaderboard-loading') as HTMLElement\r\n    const list = this.modal.querySelector('#leaderboard-list') as HTMLElement\r\n    const empty = this.modal.querySelector('#leaderboard-empty') as HTMLElement\r\n\r\n    loading.style.display = 'flex'\r\n    list.style.display = 'none'\r\n    empty.style.display = 'none'\r\n  }\r\n\r\n  private hideLoading(): void {\r\n    if (!this.modal) return\r\n\r\n    const loading = this.modal.querySelector('#leaderboard-loading') as HTMLElement\r\n    loading.style.display = 'none'\r\n  }\r\n\r\n  private showError(): void {\r\n    if (!this.modal) return\r\n\r\n    const listContainer = this.modal.querySelector('#leaderboard-list') as HTMLElement\r\n    listContainer.innerHTML = `\r\n      <div class=\"leaderboard-error\">\r\n        <p>‚ùå Errore nel caricamento della classifica</p>\r\n        <button onclick=\"location.reload()\" class=\"retry-btn\">üîÑ Riprova</button>\r\n      </div>\r\n    `\r\n    listContainer.style.display = 'block'\r\n  }\r\n\r\n  public show(): void {\r\n    if (!this.modal) return\r\n\r\n    this.modal.style.display = 'flex'\r\n    this.updateTranslations()\r\n    this.loadLeaderboard()\r\n\r\n    console.log('üèÜ Leaderboard modal opened')\r\n  }\r\n\r\n  public hide(): void {\r\n    if (!this.modal) return\r\n\r\n    this.modal.style.display = 'none'\r\n    console.log('üèÜ Leaderboard modal closed')\r\n  }\r\n\r\n  public destroy(): void {\r\n    if (this.modal) {\r\n      this.modal.remove()\r\n      this.modal = null\r\n    }\r\n  }\r\n}"],"names":["LeaderboardModal","__publicField","closeBtn","_a","backdrop","_b","tabs","_c","tab","e","tabType","languageManager","translation","element","key","tabEl","entries","error","scoreService","entry","listContainer","emptyContainer","currentUserId","authManager","index","position","isCurrentUser","medal","date","loading","list","empty"],"mappings":"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"}